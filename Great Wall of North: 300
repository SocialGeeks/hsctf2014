import numpy
import networkx as nx

guard_data = numpy.loadtxt(open("C:\VMs\shared\guards\GreatWallOfNorthCase.txt","rb"),dtype=int)

G=nx.DiGraph()
G.add_weighted_edges_from(guard_data)

print nx.dijkstra_path(G,0,31078657)

is close. It returns the weighted path of: 
start	end	cost
0	1613202	1318651
1613202	5798268	1665086
5798268	12884135	7172040
12884135	31078657	1260270

For a total cost of: 11416047 But it's not the flag. =(

Other notes:
   start	end			cost	range	efficiency
       0	17287971	1901970	17287971	9.089507721

17287971	23685842	2226224	6397871	2.873866691

23685842	27265919	2417425	3580077	1.480946462

27265919	27370295	66379975	104376	0.001572402

27370295	29973221	70759920	2602926	0.036785316

29973221	31078657	11671862	1105436	0.094709482

G.add_edge(17287971,23685842,weight=2226224)
G.add_edge(23685842,27265919,weight=2417425)
G.add_edge(27265919,27370295,weight=66379975)
G.add_edge(27370295,29973221,weight=70759920)
G.add_edge(29973221,31078657,weight=11671862)

0	1613202	1318651
1613202	14539364	1679472

0, 1613202, 14539364, 2639988, 3394875, 31078657
0, 1613202, 14539364, 2639988, 3394875, 31078657
0, 1613202, 14539364, 2639988, 3394875, 31078657

31078657
2533368
20937859
22421870
11662951
7151538

[0, 
1613202, 
5798268, 
12884135, 
31078657]

DiGraph - Dijkstra
start	end	cost
0	1613202	1318651
1613202	5798268	1665086
5798268	12884135	7172040
12884135	31078657	1260270

DiGraph - shortest_path
0, 2370689, 31078657
0	2370689	71024147
2370689	31078657	86378903
11416047
157403050
